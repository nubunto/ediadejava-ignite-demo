/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.ignite.demo;

import com.ignite.demo.catalog.Catalog;
import com.ignite.demo.catalog.CatalogKey;
import com.ignite.demo.catalog.CatalogService;
import com.ignite.demo.user.User;
import com.ignite.demo.user.UserKey;
import com.ignite.demo.user.UserService;
import org.apache.ignite.Ignite;
import org.apache.ignite.IgniteCache;
import org.apache.ignite.Ignition;
import org.apache.ignite.cache.query.QueryCursor;
import org.apache.ignite.cache.query.SqlFieldsQuery;
import org.apache.ignite.configuration.CacheConfiguration;

import java.util.List;
import java.util.UUID;

public class App {
    // Usuários
    // Catálogos
    //   - Itens
    // SQL!
    // cache -> tabela
    public static void main(String[] args) {
        Ignite ignite = Ignition.start();
        IgniteCache<UserKey, User> usersCache = ignite.getOrCreateCache(usersCacheConfiguration());
        IgniteCache<CatalogKey, Catalog> catalogsCache = ignite.getOrCreateCache(catalogCacheConfiguration());
        UserService userService = new UserService(usersCache);
        CatalogService catalogService = new CatalogService(catalogsCache);

        userService.create(new User("João"));
        userService.create(new User("Bruno"));
        userService.create(new User("José"));
        userService.create(new User("Maurício"));

        List<User> users = userService.fetchAll();
        for(User user : users) {
            System.out.println("User ID: " + user.getId() + " -- name: " + user.getName());
        }

        catalogService.create(new Catalog());
        catalogService.create(new Catalog());
        catalogService.create(new Catalog());

        List<Catalog> catalogs = catalogService.fetchAll();
        for(Catalog catalog : catalogs) {
            System.out.println("Catalog ID: " + catalog.getId());
        }
    }

    static CacheConfiguration usersCacheConfiguration() {
        return new CacheConfiguration<>("users_cache")
                .setIndexedTypes(UserKey.class, User.class);
    }

    static CacheConfiguration catalogCacheConfiguration() {
        return new CacheConfiguration<>("catalog_cache")
                .setIndexedTypes(CatalogKey.class, Catalog.class);
    }
}
